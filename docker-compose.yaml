version: "3.8"

volumes:
  grafana_data:
  prometheus_data:
  loki_data:
  promtail_log:
  promtail_conf:

networks:
  app-tier:
    name: nifi_mutualizo_nifi-network
    external: true

services:

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning/datasources
    environment:
      # - GF_SECURITY_ADMIN_USER=admin
      # - GF_SECURITY_ADMIN_PASSWORD=Gfr00tp4ss
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,percona-percona-app
    ports:
      - 3000:3000
    networks:
      app-tier:
        ipv4_address: 172.20.0.20

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      app-tier:
        ipv4_address: 172.20.0.22

  # promtail:
  #   image: grafana/promtail
  #   volumes:
  #     - promtail_log:/var/log
  #     - ./promtail/config.yaml:/etc/promtail/config.yaml
  #   command: -config.file=/etc/promtail/config.yaml
  #   networks:
  #     app-tier:
  #       ipv4_address: 172.20.0.26

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=360h'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      app-tier:
        ipv4_address: 172.20.0.24

  # Exemplo de usar o exporter com o Docker ao invés do binário
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: always
    volumes:
      - '/:/host:ro,rslave'
    networks:
      app-tier:
        ipv4_address: 172.20.0.28

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: always
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yaml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      app-tier:
        ipv4_address: 172.20.0.30
